%% -----------------------------------------------------------------------
%%
%% Copyright (c) <2011> <University of Paderborn>
%% Permission is hereby granted, free of charge, to any person
%% obtaining a copy of this software and associated documentation
%% files (the "Software"), to deal in the Software without restriction,
%% including without limitation the rights to use, copy, modify and
%% merge the Software, subject to the following conditions:
%%
%% 1.) The Software is used for non-commercial research and
%%     education purposes.
%%
%% 2.) The above copyright notice and this permission notice shall be
%%     included in all copies or substantial portions of the Software.
%%
%% 3.) Publication, Distribution, Sublicensing, and/or Selling of
%%     copies or parts of the Software requires special agreements
%%     with the University of Paderborn and is in general not permitted.
%%
%% 4.) Modifications or contributions to the software must be
%%     published under this license. The University of Paderborn
%%     is granted the non-exclusive right to publish modifications
%%     or contributions in future versions of the Software free of charge.
%%
%% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
%% EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
%% OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
%% NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
%% HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
%% WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
%% FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
%% OTHER DEALINGS IN THE SOFTWARE.
%%
%% Persons using the Software are encouraged to notify the
%% Department of Communications Engineering at the University of Paderborn
%% about bugs via <spark@nt.uni-paderborn.de>. Please reference Spark
%% in your publications if it was used for them.
%%
%% -----------------------------------------------------------------------

%% Task: Reocrds 4 channel data from respeaker soundcard and pipes each channel in one pipe

[MACRO]
  CHANNELSSOUNDCARD: 4
  FRAMESIZE: 128
  SAMPLERATE: 16000
[/MACRO]

[TASK]
  [KERNEL]
    TaskType:   Realtime 
    Scheduler: MultiCore
    FloatingPointHandlerReg: On
  [/KERNEL]
  [INPUT]
    AudioInterface: { ... }
  [/INPUT]
  [OUTPUT]
    PipeOut0: ..
    PipeOut1: ..
    PipeOut2: ..
    PipeOut3: ..
  [/OUTPUT]
  [LOGGER]
    SPARK: { FileLogger, WARN }
    DEFAULT: { DefaultLogger, WARN }
    AudioInjectorModule: { DefaultLogger, WARN }
  [/LOGGER]  
 
  [MODULES]
    [M]
      Name: AudioInterface
      Type: networksoundcard/audioinjector
      Channels:  <eval=CHANNELSSOUNDCARD>
      Framesize: <eval=FRAMESIZE>
      Samplerate: <eval=SAMPLERATE>
      BitsPerSample: 16
      HardwareInterface: 108
    [/M]
    
    [M]
      Name:            Normalize
      Type:            basic/Math
      InputFrameSize:  <eval=CHANNELSSOUNDCARD*FRAMESIZE>
      OutputFrameSize: <eval=CHANNELSSOUNDCARD*FRAMESIZE>
      ProcessData:     "out0=in0;"
    [/M]
    
    [M]   
      Name:      AudioSplitter
      Type:      basic/Router2      
      FrameSize: <eval=FRAMESIZE>
      InputChannels:  { <eval=CHANNELSSOUNDCARD> }
      OutputChannels: { 1, 1, 1, 1 }
      Mapping:        { 0, 1, 2, 3 }
    [/M]
    
    [M]     
      Name:      PipeOut0
      Type:      asn/Pipe
      BytesPerFrame: <eval=FRAMESIZE*4>
      InputModuleMode: false
      OutputModuleMode: true
      Inputs: "NIX"
      Outputs: { <eval=PIPEOUT0> }
    [/M]

    [M]     
      Name:      PipeOut1
      Type:      asn/Pipe
      BytesPerFrame: <eval=FRAMESIZE*4>
      InputModuleMode: false
      OutputModuleMode: true
      Inputs: "NIX"
      Outputs: { <eval=PIPEOUT1> }
    [/M]
    
      [M]     
      Name:      PipeOut2
      Type:      asn/Pipe
      BytesPerFrame: <eval=FRAMESIZE*4>
      InputModuleMode: false
      OutputModuleMode: true
      Inputs: "NIX"
      Outputs: { <eval=PIPEOUT2> }
    [/M]

    [M]     
      Name:      PipeOut3
      Type:      asn/Pipe
      BytesPerFrame: <eval=FRAMESIZE*4>
      InputModuleMode: false
      OutputModuleMode: true
      Inputs: "NIX"
      Outputs: { <eval=PIPEOUT3> }
    [/M]
    
    
  [/MODULES]

  [CONNECTIONS]

   AudioInterface[0] -> Normalize[0]
   Normalize[0] -> AudioSplitter[0]
   AudioSplitter[0] -> PipeOut0[0]
   AudioSplitter[1] -> PipeOut1[0]
   AudioSplitter[2] -> PipeOut2[0]
   AudioSplitter[3] -> PipeOut3[0]
    
  [/CONNECTIONS]

[/TASK]
