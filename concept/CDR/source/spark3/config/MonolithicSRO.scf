%% -----------------------------------------------------------------------
%%
%% Copyright (c) <2011> <University of Paderborn>
%% Permission is hereby granted, free of charge, to any person
%% obtaining a copy of this software and associated documentation
%% files (the "Software"), to deal in the Software without restriction,
%% including without limitation the rights to use, copy, modify and
%% merge the Software, subject to the following conditions:
%%
%% 1.) The Software is used for non-commercial research and
%%     education purposes.
%%
%% 2.) The above copyright notice and this permission notice shall be
%%     included in all copies or substantial portions of the Software.
%%
%% 3.) Publication, Distribution, Sublicensing, and/or Selling of
%%     copies or parts of the Software requires special agreements
%%     with the University of Paderborn and is in general not permitted.
%%
%% 4.) Modifications or contributions to the software must be
%%     published under this license. The University of Paderborn
%%     is granted the non-exclusive right to publish modifications
%%     or contributions in future versions of the Software free of charge.
%%
%% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
%% EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
%% OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
%% NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
%% HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
%% WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
%% FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
%% OTHER DEALINGS IN THE SOFTWARE.
%%
%% Persons using the Software are encouraged to notify the
%% Department of Communications Engineering at the University of Paderborn
%% about bugs via <spark@nt.uni-paderborn.de>. Please reference Spark
%% in your publications if it was used for them.
%%
%% -----------------------------------------------------------------------

%% Task: Reocrds 4 channel data from respeaker soundcard and pipes each channel in one pipe

[MACRO]
  CHANNELS: 4
  FRAMESIZE: 128
  FFTSIZE: 8192
  FFTSIZERESAMPLE: 1024
  SAMPLERATE: 16000    
[/MACRO]

[TASK]
  [KERNEL]
    TaskType:   Realtime 
    Scheduler: MultiCore
    FloatingPointHandlerReg: On
  [/KERNEL]
  [INPUT]
    AudioInterface: { ... }
  [/INPUT]
  [OUTPUT]
    ResampleControl: ..
  [/OUTPUT]
  [LOGGER]
    SPARK: { FileLogger, WARN }
    DEFAULT: { DefaultLogger, WARN }
    AudioInterface: { DefaultLogger, WARN }
  [/LOGGER]  
 
  [MODULES]
    [M]
      Name: AudioInterface
      Type: networksoundcard/audioinjector
      Channels:  <eval=CHANNELS>
      Framesize: <eval=FRAMESIZE>
      Samplerate: <eval=SAMPLERATE>
      BitsPerSample: 16
      HardwareInterface: 108
    [/M]
    
    [M]
      Name:            Normalize
      Type:            basic/Math
      InputFrameSize:  <eval=CHANNELS*FRAMESIZE>
      OutputFrameSize: <eval=CHANNELS*FRAMESIZE>
      ProcessData:     "out0=in0;"
    [/M]
    
    [M]   
      Name:      AudioSplitter
      Type:      basic/Router2      
      FrameSize: <eval=FRAMESIZE>
      InputChannels:  { <eval=CHANNELS> }
      OutputChannels: { 1, 1, 1, 1 }
      Mapping:        { 0, 1, 2, 3 }
    [/M]
  
      [M]
      Name:  CoherenceSRO
      Type:  asn/CoherenceSRO
      FrameSize:  <eval=FRAMESIZE>
      Channels:   <eval=CHANNELS>
      WelchWindowMultiplikator:  5
      WelchWindowShift:  512
      MaxSRO: 400
      Samplerate: <eval=SAMPLERATE>
      FFTSize:  <eval=FFTSIZE>
      NormalizeSRO: true
      TemporalDelayCoherence: <eval=FFTSIZE>
      RestrictToFirst: true
    [/M]
    
    [M]
      Name:      Route
      Type:      basic/Router2
      FrameSize: <eval=FRAMESIZE>
      InputChannels: { 1, 1, 1, 1 }
      OutputChannels: { 4 }
      Mapping: { 0, 1 , 2, 3 }
    [/M]
    
    
     [M]
      Name:      Splitter
      Type:      basic/Router2
      FrameSize: <eval=1>
      InputChannels: { <eval=CHANNELS> }
      OutputChannels: { 1, 1, 1, 1 }
      Mapping: { 0, 1 , 2, 3 }
    [/M]
    
    [M]
      Name: STFTResampleC0
      Type: asn/stftresample
      Channels: <eval=1>
      FrameSize: { <eval=FRAMESIZE> }
      FFTSize: { <eval=FFTSIZERESAMPLE> }
      SRO: { 0 }
      UseSROInput: true
    [/M] 

    [M]
      Name: STFTResampleC1
      Type: asn/stftresample
      Channels: <eval=1>
      FrameSize: { <eval=FRAMESIZE> }
      FFTSize: { <eval=FFTSIZERESAMPLE> }
      SRO: { 0 }
      UseSROInput: true
    [/M] 

    [M]
      Name: STFTResampleC2
      Type: asn/stftresample
      Channels: <eval=1>
      FrameSize: { <eval=FRAMESIZE> }
      FFTSize: { <eval=FFTSIZERESAMPLE> }
      SRO: { 0 }
      UseSROInput: true
    [/M] 

    [M]
      Name: STFTResampleC3
      Type: asn/stftresample
      Channels: <eval=1>
      FrameSize: { <eval=FRAMESIZE> }
      FFTSize: { <eval=FFTSIZERESAMPLE> }
      SRO: { 0 }
      UseSROInput: true
    [/M] 

    
    [M]
      Name: ResampleControl
      Type: asn/SROTracker
      Channels: <eval=CHANNELS>
      RestrictToFirst: true
      ShowInfo: true
    [/M] 
    
    [M]
        Name:       Token
        Type:       basic/GenerateToken
        FrameSize:  <eval=CHANNELS*4>
    [/M]  
    
    [M]
      Name:            Zero
      Type:            basic/Math
      InputFrameSize:  <eval=CHANNELS>
      OutputFrameSize: <eval=CHANNELS>
      ProcessData:     "out0=0*in0;"
    [/M]
    
  [/MODULES]

  [CONNECTIONS]

   AudioInterface[0] -> Normalize[0]
   Normalize[0] -> AudioSplitter[0]
   AudioSplitter[0] -> STFTResampleC0[0]
   AudioSplitter[1] -> STFTResampleC1[0]
   AudioSplitter[2] -> STFTResampleC2[0]
   AudioSplitter[3] -> STFTResampleC3[0]
    
    STFTResampleC0[0] -> Route[0]
    STFTResampleC1[0] -> Route[1]
    STFTResampleC2[0] -> Route[2]
    STFTResampleC3[0] -> Route[3]
    Route[0] -> CoherenceSRO[0]
    CoherenceSRO[1] -> ResampleControl[0]
    CoherenceSRO[2] -> ResampleControl[1]
    ResampleControl[0] -> Token[0]
    Token[0] -> Zero[0]
    Zero[0] -> Splitter[0]

    Splitter[0] -> STFTResampleC0[1]
    Splitter[1] -> STFTResampleC1[1]
    Splitter[2] -> STFTResampleC2[1]
    Splitter[3] -> STFTResampleC3[1] 
    
    
  [/CONNECTIONS]

[/TASK]
