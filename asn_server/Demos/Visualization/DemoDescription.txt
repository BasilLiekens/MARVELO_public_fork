--------------------------------------------
Demonstration Summary and Setup Description
--------------------------------------------

1.) Distributed Recording
Task: Record data from two nodes and playback
      on headset.

Hardware: 
    - asnupb2 (6ch audio frontend)
    - asnupb3 (6ch audio frontend)

    
Files:
    - Demos/topology/AudioRecording/StereoAudioServer.xml
        Configuration: asnupb2 (record and host server), asnupb3 (record and forward to asnupb2)
        
    - Demos/system/spark3/config/SparkAudio2Pipe.scf
        Record data from local hardware via alsa and
        push it into pipe (128 samples * 6 channels * Float)
        
    - Demos/system/spark3/config/Pipe2StereoAudioServer.scf
        Extract first channel from each stream and combine to
        stereo signal. Offer data via TCP stream on port 8000
        
    - Demos/Visualization/AudioPlayback.scf
        Connects to asnupb2, receives stereo audio data stream
        and plays it on alsa device
        
--------------------------------------------
2.) Spectrogram & Direction of Arrival
Task: Visualize a spectrogram of a single channel signal and in
      parallel show the direction of arrival information from
      node asnupb2
      
Hardware: 
    - asnupb2 (6ch audio frontend)
    
Files:
    - Demos/topology/AudioRecording/AudioServer.xml
        Configuration: asnupb2 (record and host audio server)
        
    - Demos/system/spark3/config/SparkAudio2Pipe.scf
        Record data from local hardware via alsa and
        push it into pipe (128 samples * 6 channels * Float)
    
    - Demos/system/spark3/config/PipedAudioServer.scf
        Take data from pipe (128 samples * 6 channels * Float) and
        offer it via TCP data server on port 8000
    
    - Demos/Visualization/Lightdirection.scf
        Connects to asnupb2, receives 6 channel audio data stream
        and shows spectrogram of first channel and direction
        of arrival via light
        
-------------------------------------------
3.) Diarization with waterfall diagram
Task: Record data from two nodes and decide
      where the active speaker is located and
      which node is closest.
    
    
Hardware: 
   - asnupb2 (6ch audio frontend)
   - asnupb3 (6ch audio frontend)
   - asnupb1 (...)
   
Files:
    - Demos/topology/Diarization/DiaryDistribute.xml
        Configuration: asnupb2 (record, Vad, SRP), asnupb3 (record,Vad, SRP), asnupb1 (diary server)
   
    - Demos/system/spark3/config/SparkAudio2Pipe.scf
        Record data from local hardware via alsa and
        push it into pipe (128 samples * 6 channels * Float)   
        
    - Demos/system/spark3/config/PipedSRP.scf
        SRP-Phat DoA estimation and Voice Activity Detection
    
    - Demos/system/spark3/config/DiaryServer.scf
        Combines Diarization information from nodes asnupb2 and asnupb3
        and offers them via TCP to laptop
        
    - Demos/Visualization/DiaryVisualization.scf
        Visualization of diary information via waterfall diagram        
        
-------------------------------------------
3.) Synchronization to audio source
Task: Record data from two nodes and synchronize to local
      audio source
    
    
Hardware: 
   - asnupb2 (6ch audio frontend)
   - asnupb3 (6ch audio frontend)
   
Files:
    - Demos/topology/Synchronization/Synchronization.xml
        Configuration: asnupb2 (record, Vad, SRP), asnupb3 (record,Vad, SRP), asnupb1 (diary server)
   
    - Demos/system/spark3/config/SparkAudio2Pipe.scf
        Record data from local hardware via alsa and
        push it into pipe (128 samples * 6 channels * Float)   
        
    - Demos/system/spark3/config/Pipe2SyncStereoAudioServer.scf
        Estimates drift by GCC-Phat and linear approximation; resamples data 
        from nodes asnupb2 and asnupb3 via STFT-resample
        and offers it via TCP to laptop
        
    - Demos/Visualization/GCCResample.scf
        Audio Playback and drift estimation          
        