%% -----------------------------------------------------------------------
%%
%% Copyright (c) <2011> <University of Paderborn>
%% Permission is hereby granted, free of charge, to any person
%% obtaining a copy of this software and associated documentation
%% files (the "Software"), to deal in the Software without restriction,
%% including without limitation the rights to use, copy, modify and
%% merge the Software, subject to the following conditions:
%%
%% 1.) The Software is used for non-commercial research and
%%     education purposes.
%%
%% 2.) The above copyright notice and this permission notice shall be
%%     included in all copies or substantial portions of the Software.
%%
%% 3.) Publication, Distribution, Sublicensing, and/or Selling of
%%     copies or parts of the Software requires special agreements
%%     with the University of Paderborn and is in general not permitted.
%%
%% 4.) Modifications or contributions to the software must be
%%     published under this license. The University of Paderborn
%%     is granted the non-exclusive right to publish modifications
%%     or contributions in future versions of the Software free of charge.
%%
%% THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
%% EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
%% OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
%% NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
%% HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
%% WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
%% FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
%% OTHER DEALINGS IN THE SOFTWARE.
%%
%% Persons using the Software are encouraged to notify the
%% Department of Communications Engineering at the University of Paderborn
%% about bugs via <spark@nt.uni-paderborn.de>. Please reference Spark
%% in your publications if it was used for them.
%%
%% -----------------------------------------------------------------------
[MACRO]
  EVENTDATASIZE: 527
  SIZEOFFLOAT: 4
  NUMEVENTS: 4  
[/MACRO]
[TASK]
  [KERNEL]
    TaskType: Realtime
    Scheduler:MultiCore
  [/KERNEL]

  [INPUT]
    Client: ...
  [/INPUT]

  [OUTPUT]
     Event: ...
     lineOut: ...
  [/OUTPUT]
  [LOGGER]
    DEFAULT: { ConsoleLogger, WARN }
  [/LOGGER]
  [MODULES]
    [M]
      Name:  Client
      Type:  basic/RemoteLinkClient
      FrameSizes: { <eval=EVENTDATASIZE*SIZEOFFLOAT> }
      ServerIP: "10.0.1.1"
      %% ServerIP: "131.234.222.121"
      Port: 8000
    [/M]

    [M]   
      Name:      EventDataSelect
      Type:      basic/Router2      
      FrameSize: 1
      InputChannels:  { <eval=EVENTDATASIZE> }
      OutputChannels: { 4 }
      Mapping:        { 103, 291, 418, 509 }
    [/M]
    
     [M]
       Name:            Log2Prob
       Type:            basic/Math
       InputFrameSize:  <eval=4>
       OutputFrameSize: <eval=4>
       ProcessData:     <str="out0=1/(1+exp((-1)*in0));">
     [/M]
     
    [M]   
      Name:      EventDataSplitter
      Type:      basic/Router2      
      FrameSize: 1
      InputChannels:  { <eval=NUMEVENTS> }
      OutputChannels: { 1, 1, 1, 1 }
      Mapping:        { 0, 1, 2, 3 }
    [/M]
    
    [M]
      Name:  Event
      Type:  gtkplot2/Mixer
      FrameSize: {<eval=1>, <eval=1>, <eval=1>, <eval=1>}
      MasterFrameSize: { <eval=1> }
      MasterPortLabel: { "Master" }
      PortLabel: { "Clapping", "Music", "Speech", "Whistle" }
      WindowName: "ASN"
      Window: 1
    [/M] 

    [M]
      Name: lineOut
      Type: gtkplot2/OutTextLine
      LineSize: <eval=4>
      Queue: BLOCK
      DataType: FLOAT
      FormatString: { "%02.4f", "%02.4f", "%02.4f", "%02.4f" }
    [/M]
    
    [/MODULES]

  [CONNECTIONS]
    Client[0] -> EventDataSelect[0]
    EventDataSelect[0] -> Log2Prob[0]
    Log2Prob[0] -> EventDataSplitter[0]
    EventDataSplitter[0] -> Event["Clapping"]
    EventDataSplitter[1] -> Event["Music"]
    EventDataSplitter[2] -> Event["Speech"]
    EventDataSplitter[3] -> Event["Whistle"]
    Log2Prob[0] -> lineOut
    
  [/CONNECTIONS]
[/TASK] 
